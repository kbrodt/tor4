[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"


[tool.poetry]
name = "tor4"
version = "0.1.0"
description = "A toy pytorch-like library based on NumPy"
authors = ["Kirill Brodt <cyrill.brodt@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/kbrodt/tor4"
keywords = ["PyTorch on NumPy", "Automatic differentiation", "Autodiff", "Neural Networks"]

[tool.poetry.dependencies]
python = "^3.6.1"
pip = "^20.0.2"
requests = "^2.23.0"
scipy = "^1.4.1"
tqdm = "^4.43.0"
numpy = "^1.16.0"

[tool.poetry.dev-dependencies]
black = {version = "^19.10b0", allow-prereleases = true}
coverage = "^5.2.1"
covdefaults = "^1.1.0"
flake8 = "^3.8.3"
isort = "^4.3.21"
mypy = "^0.782.0"
pytest = "^5.0"
lxml = "^4.5.2"


[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''


[tool.isort]
profile = "hug"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88


[tool.pylint.'MESSAGES CONTROL']
disable = ["C0330", "C0326"]

[tool.pylint.format]
max-line-length = 88


[tool.coverage.run]
plugins = ["covdefaults"]


[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py36,pre-commit

[testenv]
# Let us make a reports dir using mkdir
whitelist_externals =
    /bin/mkdir
    poetry
commands =
    poetry install -v

    coverage erase
    mkdir -p reports/coverage
    poetry run coverage run --source=tor4 -m pytest {posargs:tests}
    poetry run coverage report --fail-under 80
    poetry run coverage html -d reports/coverage --fail-under 80

    poetry run mypy --junit-xml reports/mypy/typecheck.xml --cobertura-xml-report reports/mypy --html-report reports/mypy .

[testenv:pre-commit]
skip_install = true
deps = pre-commit
commands = pre-commit run --all-files --show-diff-on-failure
"""
